--Ejercicio 1

CREATE TABLE CATEGORIA (
	ID NUMBER,
	NOMBRE_CATEGORIA VARCHAR2(50 BYTE),
	IVA NUMBER(5,2)
) TABLESPACE TS_EXAMEN21 pctfree 5;

-- Ejercicio 2
CREATE TABLE LIBRO(
	CODIGO_BARRAS NUMBER,
	OFERTA NUMBER,
	DESCRIPCION VARCHAR2(500 CHAR),
	STOCK NUMBER,
	EXPOSICION NUMBER,
	PAGINAS NUMBER,
	PESO_NETO NUMBER,
	CATEGORIA NUMBER,
	ALTURA NUMBER,
	PRECIO_ACTUAL NUMBER(6,2),
	PASILLO NUMBER
) TABLESPACE TS_EXAMEN21 pctfree 15;

-- Ejercicio 3
ALTER TABLE ADD CONSTRAING CATEGORIA_PK PRIMARY KEY(ID);
ALTER TABLE ADD CONSTRAING LIBRO_PK PRIMARY KEY(CODIGO_BARRAS);
ALTER TABLE ADD CONSTRAINT libro_categoria_fk FOREIGN KEY(CATEGORIA) REFERENCES CATEGORIA(ID);

-- Ejercicio 4
CREATE BITMAP INDEX libro_idx on LIBRO(CATEGORIA);
CREATE INDEX libro_idx2 on LIBRO(UPPER(DESCRIPCION));
CREATE INDEX libro_idx3 on LIBRO(PRECIO_ACTUAL);
CREATE UNIQUE INDEX categoria_idx on CATEGORIO(NOMBRE_CATEGORIA);

-- Ejercicio 5
CREATE role R_CORRIGE;
GRANT SELECT ON CATEGORIA TO R_CORRIGE;
GRANT UPDATE(nombre_categoria) ON CATEGORIA TO R_CORRIGE;
CREATE OR REPLACE VIEW libro_view AS (SELECT codigo_barras, descripcion, categoria, precio_actual from LIBRO) with read only;
GRANT SELECT ON libro_view TO R_CORRIGE;

-- Ejercicio 6
CREATE SYNONYM CATEGORY FOR CATEGORIA;
CREATE SYNONYM BOOK FOR LIBRO;

-- Ejercicio 7
-- 7.1 
SELECT username, created FROM user_users;
INSERT INTO ESC.MIRESPUESTA VALUES (1, 'la fecha que tengas');
-- 7.2
show sga;
INSERT INTO ESC.MIRESPUESTA VALUES (2, 'valor');
-- 7.3
SELECT block_size, name from v$datafile
INSERT INTO ESC.MIRESPUESTA VALUES (3, 'los bloques jefe');
-- 7.4
SELECT bytes from v$log where status = 'current';
INSERT INTO ESC.MIRESPUESTA VALUES (4, 'el bytes bro');
-- 7.5
select * from dict where table_name like '%USER%PRIV%';
select * from USER_TAB_PRIVS order by 1;
INSERT INTO ESC.MIRESPUESTA VALUES (5, 'el privilegio tito');

-- Para terminar, hacemos el commit:
commit;

-- Ejercicio 8
CREATE MATERIALIZED VIEW VM_LIBRO
REFRESH FORCE START WITH SYSDATE NEXT SYSDATE + 1/24
 AS (
	select codigo_barras, descripcion, stock, nombre_categoria, (PRECIO_ACTUAL + (PRECIO_ACTUAL*IVA/100)) pvp from LIBRO l, CATEGORIA c where l.categoria = c.id
);

